-----------------------------------------------------------------------------------------------question 1-----------------------------------------------------------------------------------------------------------


CREATE TABLE produits (
	id SERIAL PRIMARY KEY,
	nom VARCHAR(256),
	prix FLOAT(10)
)

CREATE TABLE disque_dur(
	ssd BOOLEAN,
	vitesse INT
) INHERITS (produits);

CREATE TABLE carte_graphique(
	memoire INT
) INHERITS (produits);

INSERT INTO produits (nom, prix) VALUES ('PS4', 321);
INSERT INTO produits (nom, prix) VALUES ('DELL XP 15', 1269);
INSERT INTO produits (nom, prix) VALUES ('Z-FLIP 5', 1529);

INSERT INTO disque_dur (nom, prix,ssd, vitesse) VALUES('SANDISK', 899,TRUE,32);
INSERT INTO disque_dur (nom, prix,ssd, vitesse) VALUES('SEAGATE', 129,TRUE,12);
INSERT INTO disque_dur (nom, prix,ssd, vitesse) VALUES('TOSHIBA', 1899,TRUE,49);

INSERT INTO carte_graphique (nom, prix,memoire) VALUES('NVIDIA 1600', 1299,321);
INSERT INTO carte_graphique (nom, prix,memoire) VALUES('NVIDIA 1080', 1699,322);
INSERT INTO carte_graphique (nom, prix,memoire) VALUES('NVIDIA 4060 TI', 2899,432);

SELECT produits.id, produits.nom, produits.prix, disque_dur.ssd,disque_dur.vitesse,carte_graphique.memoire FROM produits
LEFT JOIN disque_dur ON produits.id = disque_dur.id
LEFT JOIN carte_graphique ON produits.id = disque_dur.id;

-----------------------------------------------------------------------------------------------question 2-----------------------------------------------------------------------------------------------------------

CREATE TABLE utilisateurs (
    id SERIAL,
    nom_utilisateur VARCHAR(255),
    mot_de_passe VARCHAR(255),
    date_de_creation DATE,
    etat VARCHAR(255),
    PRIMARY KEY (id, etat)
) PARTITION BY LIST (etat);

CREATE TABLE utilisateurs_ACONFIRME PARTITION OF utilisateurs
    FOR VALUES IN ('A_CONFIRME');

CREATE TABLE utilisateurs_ACTIF PARTITION OF utilisateurs
    FOR VALUES IN ('ACTIF');

CREATE TABLE utilisateurs_BANNIS PARTITION OF utilisateurs
    FOR VALUES IN ('BANNIS');

INSERT INTO utilisateurs (nom_utilisateur,mot_de_passe,date_de_creation,etat) VALUES ('Gregory', 'Greg1515$','2023-09-08','A_CONFIRME')

INSERT INTO utilisateurs (nom_utilisateur,mot_de_passe,date_de_creation,etat) VALUES ('Sarah', 'Sarah2121$','2023-09-08','A_CONFIRME')

INSERT INTO utilisateurs (nom_utilisateur,mot_de_passe,date_de_creation,etat) VALUES ('Corinne', 'Corinne2121$','2023-09-08','BANNIS')

INSERT INTO utilisateurs (nom_utilisateur,mot_de_passe,date_de_creation,etat) VALUES ('Albert', 'Albert2424$','2023-09-08','BANNIS')
	
INSERT INTO utilisateurs (nom_utilisateur,mot_de_passe,date_de_creation,etat) VALUES ('Thirtsa', 'Thirtsa2828$','2023-09-08','ACTIF')
	
INSERT INTO utilisateurs (nom_utilisateur,mot_de_passe,date_de_creation,etat) VALUES ('Dwitchy', 'Dwitchy33$33$','2023-09-08','ACTIF')
	
UPDATE utilisateurs
SET etat ='BANNIS' WHERE  nom_utilisateur = 'Thirtsa' AND etat ='ACTIF'; 

-----------------------------------------------------------------------------------------------question 3-----------------------------------------------------------------------------------------------------------


SELECT AVG(produits.prix) FROM produits;

SELECT p.relname AS category, AVG(pd.prix) AS prix FROM produits pd INNER JOIN pg_class p ON pd.tableoid = p.oid GROUP BY p.relname;

SELECT 'produits' AS produits_type, AVG(prix) AS prix
FROM produits
UNION
SELECT 'disque_dur' AS produits_type, AVG(prix) AS prix
FROM disque_dur
UNION
SELECT 'carte_graphique' AS produits_type, AVG(prix) AS prix
FROM carte_graphique;




	
