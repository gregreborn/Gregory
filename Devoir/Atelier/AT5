
numero 1 a:
CREATE OR REPLACE PROCEDURE creator_produits()
	language plpgsql
AS $$
BEGIN 
	CREATE TABLE produits(
	id SERIAL PRIMARY KEY,
	nom VARCHAR(255) NOT NULL,
	prix DECIMAL(10,2) NOT NULL,
	quantite INT NOT NULL,
	creation TIMESTAMP,
	mise_a_jour TIMESTAMP);
END $$;
numero 1 b:
CREATE OR REPLACE FUNCTION validate_produits()
	RETURNS TRIGGER 
	language plpgsql
	AS $$
	
DECLARE 
	temp_product RECORD;
BEGIN

	  IF NEW.prix < 0 OR NEW.quantite < 0 THEN
        RAISE EXCEPTION 'Prix et quantite doivent être positifs ou zéro';
      END IF;
	
    SELECT INTO temp_product
    FROM produits
    WHERE nom = NEW.nom;
    
    IF FOUND THEN
        RAISE EXCEPTION 'Le nom du produit doit être unique';
    END IF;

	NEW.creation := NOW();
    NEW.mise_a_jour := NULL;
    
    RETURN NEW;
END $$;

CREATE TRIGGER validate_produits
BEFORE INSERT ON produits
FOR EACH ROW
EXECUTE FUNCTION validate_produits();

INSERT INTO produits (nom, prix, quantite) VALUES ('Produit A', 10, 5);
INSERT INTO produits (nom, prix, quantite) VALUES ('Produit B', -10, 5);
INSERT INTO produits (nom, prix, quantite) VALUES ('Produit A', 10, 5);
numero 1 c:

numero 2 a:
numero 2 b:

numero 3:

